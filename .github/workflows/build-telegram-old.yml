name: Build Telegram Old Version (Stable)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-telegram-old:
    runs-on: macos-latest
    
    steps:
    - name: Checkout our repository
      uses: actions/checkout@v4
      
    - name: Clone original Telegram iOS
      run: |
        echo "üì• Cloning original Telegram iOS..."
        git clone https://github.com/TelegramMessenger/Telegram-iOS.git original-telegram
        cd original-telegram
        
    - name: Checkout stable version
      run: |
        echo "üìã Checking out stable version..."
        cd original-telegram
        
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ —Ç–µ–≥–∏
        git checkout v9.4.2 || git checkout v9.4.1 || git checkout v9.4.0 || git checkout v9.3.0 || {
          echo "‚ö†Ô∏è Stable tags not found, trying main branch..."
          git checkout main
        }
        
        echo "‚úÖ Checked out version: $(git describe --tags --always)"
        
    - name: Update submodules for stable version
      run: |
        echo "üîÑ Updating submodules for stable version..."
        cd original-telegram
        
        # –ü—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å —Å–∞–±–º–æ–¥—É–ª–∏ –¥–ª—è —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏
        git submodule update --init --recursive || {
          echo "‚ö†Ô∏è Full submodule update failed, trying individual updates..."
          git submodule update --init build-system/bazel-rules || echo "bazel-rules failed"
          git submodule update --init submodules/LottieCpp || echo "LottieCpp failed"
          git submodule update --init third-party/XcodeGen || echo "XcodeGen failed"
          git submodule update --init third-party/dav1d || echo "dav1d failed"
          git submodule update --init third-party/libvpx || echo "libvpx failed"
          git submodule update --init third-party/td || echo "td failed"
        }
        
    - name: Apply modifications
      run: |
        echo "üîß Applying modifications..."
        cd original-telegram
        # –ò–∑–º–µ–Ω—è–µ–º "Chats" –Ω–∞ "ch"
        sed -i '' 's/"DialogList.TabTitle" = "Chats";/"DialogList.TabTitle" = "ch";/g' Telegram/Telegram-iOS/en.lproj/Localizable.strings
        sed -i '' 's/"DialogList.Title" = "Chats";/"DialogList.Title" = "ch";/g' Telegram/Telegram-iOS/en.lproj/Localizable.strings
        echo "‚úÖ Modifications applied: 'Chats' ‚Üí 'ch'"
        
    - name: Verify changes
      run: |
        echo "üîç Verifying changes..."
        cd original-telegram
        grep -n "DialogList.TabTitle\|DialogList.Title" Telegram/Telegram-iOS/en.lproj/Localizable.strings
        
    - name: Setup Xcode
      run: |
        echo "üì± Setting up Xcode..."
        sudo xcode-select --switch /Applications/Xcode.app
        xcodebuild -version
        
    - name: Generate Xcode project
      run: |
        echo "üî® Generating Xcode project..."
        cd original-telegram
        python3 build-system/Make/Make.py \
          --cacheDir="$HOME/telegram-bazel-cache" \
          generateProject \
          --configurationPath=build-system/template_minimal_development_configuration.json
        
    - name: Build Telegram IPA
      run: |
        echo "üì¶ Building Telegram IPA for iOS devices..."
        cd original-telegram
        
        # –ö–æ–ø–∏—Ä—É–µ–º exportOptions.plist
        cp ../../ios/exportOptions.plist Telegram/Telegram-iOS/exportOptions.plist
        
        # –°–æ–±–∏—Ä–∞–µ–º –∞—Ä—Ö–∏–≤
        xcodebuild -project Telegram.xcodeproj -scheme Telegram -configuration Debug -archivePath build/Telegram.xcarchive archive
        
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º IPA
        xcodebuild -exportArchive -archivePath build/Telegram.xcarchive -exportPath build/ipa -exportOptionsPlist Telegram/Telegram-iOS/exportOptions.plist
        
    - name: Find IPA files
      run: |
        echo "üîç Looking for IPA files..."
        cd original-telegram
        find . -name "*.ipa" -type f
        ls -la build/ipa/ || echo "IPA directory not found"
        
    - name: Upload IPA file
      uses: actions/upload-artifact@v4
      with:
        name: telegram-old-ipa
        path: original-telegram/build/ipa/*.ipa
        if-no-files-found: warn
        
    - name: Success message
      run: |
        echo "üéâ Old Telegram IPA build completed!"
        echo "üì± Changes applied: 'Chats' ‚Üí 'ch'"
        echo "üì¶ IPA file ready for iOS devices"
        echo "üì• Download from: GitHub Actions ‚Üí Artifacts ‚Üí telegram-old-ipa"
        echo ""
        echo "‚úÖ You now have Telegram with 'ch' button!" 