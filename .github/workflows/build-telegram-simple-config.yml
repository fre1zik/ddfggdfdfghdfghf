name: Build Telegram Simple Config

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-telegram-simple-config:
    runs-on: macos-14
    
    steps:
    - name: Checkout our repository
      uses: actions/checkout@v4
      
    - name: Clone original Telegram iOS
      run: |
        echo "üì• Cloning original Telegram iOS..."
        git clone https://github.com/TelegramMessenger/Telegram-iOS.git original-telegram
        cd original-telegram
        
    - name: Update submodules with retry
      run: |
        echo "üîÑ Updating submodules with retry mechanism..."
        cd original-telegram
        
        # –ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞
        echo "Attempt 1: git submodule update --init --recursive"
        git submodule update --init --recursive || {
          echo "‚ö†Ô∏è First attempt failed, trying alternative approach..."
          
          # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ - –æ–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Å–∞–±–º–æ–¥—É–ª—å –æ—Ç–¥–µ–ª—å–Ω–æ
          git submodule foreach --recursive git fetch origin
          git submodule update --init --recursive --force || {
            echo "‚ö†Ô∏è Second attempt failed, trying manual submodule update..."
            
            # –†—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–∞–±–º–æ–¥—É–ª–µ–π
            cd submodules/TgVoipWebrtc/tgcalls 2>/dev/null && git fetch origin && git reset --hard HEAD && cd ../../.. || echo "tgcalls update skipped"
            cd submodules/rlottie/rlottie 2>/dev/null && git fetch origin && git reset --hard HEAD && cd ../../.. || echo "rlottie update skipped"
            cd third-party/td/td 2>/dev/null && git fetch origin && git reset --hard HEAD && cd ../../.. || echo "td update skipped"
            
            echo "‚úÖ Manual submodule update completed"
          }
        }
        
    - name: Apply modifications
      run: |
        echo "üîß Applying modifications..."
        cd original-telegram
        # –ò–∑–º–µ–Ω—è–µ–º "Chats" –Ω–∞ "ch"
        sed -i '' 's/"DialogList.TabTitle" = "Chats";/"DialogList.TabTitle" = "ch";/g' Telegram/Telegram-iOS/en.lproj/Localizable.strings
        sed -i '' 's/"DialogList.Title" = "Chats";/"DialogList.Title" = "ch";/g' Telegram/Telegram-iOS/en.lproj/Localizable.strings
        echo "‚úÖ Modifications applied: 'Chats' ‚Üí 'ch'"
        
    - name: Verify changes
      run: |
        echo "üîç Verifying changes..."
        cd original-telegram
        grep -n "DialogList.TabTitle\|DialogList.Title" Telegram/Telegram-iOS/en.lproj/Localizable.strings
        
    - name: Setup Xcode 16.2
      run: |
        echo "üì± Setting up Xcode 16.2..."
        sudo xcode-select --switch /Applications/Xcode_16.2.app
        xcodebuild -version
        
    - name: Generate Xcode project with simple config
      run: |
        echo "üî® Generating Xcode project with simple config..."
        cd original-telegram
        python3 build-system/Make/Make.py \
          --cacheDir="$HOME/telegram-bazel-cache" \
          generateProject \
          --configurationPath=build-system/template_minimal_development_configuration.json \
          --xcodeManagedCodesigning \
          --disableExtensions \
          --disableProvisioningProfiles \
          --define=buildNumber=10000 \
          --define=telegramVersion=11.14 \
          --define=appName=Telegram \
          --define=appBundleId=org.telegram.TelegramCore \
          --define=appVersion=11.14 \
          --define=appBuildNumber=10000 \
          --define=appDisplayName=Telegram \
          --define=appIconName=AppIcon \
          --define=appLaunchStoryboardName=LaunchScreen \
          --define=appMainStoryboardName=Main \
        || {
          echo "‚ö†Ô∏è Simple config failed, trying minimal config..."
          python3 build-system/Make/Make.py \
            --cacheDir="$HOME/telegram-bazel-cache" \
            generateProject \
            --configurationPath=build-system/template_minimal_development_configuration.json \
            --xcodeManagedCodesigning \
            --disableExtensions \
            --disableProvisioningProfiles
        }
        
    - name: Build Telegram IPA
      run: |
        echo "üì¶ Building Telegram IPA for iOS devices..."
        cd original-telegram
        
        # –ö–æ–ø–∏—Ä—É–µ–º exportOptions.plist
        cp ../../ios/exportOptions.plist Telegram/Telegram-iOS/exportOptions.plist
        
        # –°–æ–±–∏—Ä–∞–µ–º –∞—Ä—Ö–∏–≤
        xcodebuild -project Telegram.xcodeproj -scheme Telegram -configuration Debug -archivePath build/Telegram.xcarchive archive || {
          echo "‚ö†Ô∏è Release build failed, trying Debug..."
          xcodebuild -project Telegram.xcodeproj -scheme Telegram -configuration Debug -archivePath build/Telegram.xcarchive archive
        }
        
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º IPA
        if [ -f "build/Telegram.xcarchive" ]; then
          xcodebuild -exportArchive -archivePath build/Telegram.xcarchive -exportPath build/ipa -exportOptionsPlist Telegram/Telegram-iOS/exportOptions.plist || {
            echo "‚ö†Ô∏è Export failed, trying without codesigning..."
            xcodebuild -exportArchive -archivePath build/Telegram.xcarchive -exportPath build/ipa -exportOptionsPlist Telegram/Telegram-iOS/exportOptions.plist -allowProvisioningUpdates
          }
        fi
        
    - name: Find IPA files
      run: |
        echo "üîç Looking for IPA files..."
        cd original-telegram
        find . -name "*.ipa" -type f
        ls -la build/ipa/ || echo "IPA directory not found"
        
    - name: Upload IPA file
      uses: actions/upload-artifact@v4
      with:
        name: telegram-simple-config-ipa
        path: original-telegram/build/ipa/*.ipa
        if-no-files-found: warn
        
    - name: Success message
      run: |
        echo "üéâ Simple Config Telegram IPA build completed!"
        echo "üì± Changes applied: 'Chats' ‚Üí 'ch'"
        echo "üì¶ IPA file ready for iOS devices"
        echo "üì• Download from: GitHub Actions ‚Üí Artifacts ‚Üí telegram-simple-config-ipa"
        echo ""
        echo "‚úÖ You now have Telegram with 'ch' button!" 