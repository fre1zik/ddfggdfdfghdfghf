name: Build Telegram IPA for iOS

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-telegram-ipa:
    runs-on: macos-latest
    
    steps:
    - name: Checkout our repository
      uses: actions/checkout@v4
      
    - name: Clone original Telegram iOS
      run: |
        echo "üì• Cloning original Telegram iOS..."
        git clone https://github.com/TelegramMessenger/Telegram-iOS.git original-telegram
        cd original-telegram
        
    - name: Update submodules with aggressive retry
      run: |
        echo "üîÑ Updating submodules with aggressive retry mechanism..."
        cd original-telegram
        
        # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–∞–±–º–æ–¥—É–ª–∏
        echo "‚ö†Ô∏è Disabling problematic submodules..."
        git config submodule.submodules/TgVoipWebrtc/tgcalls.update none || echo "tgcalls config failed"
        git config submodule.submodules/rlottie/rlottie.update none || echo "rlottie config failed"
        git config submodule.third-party/webrtc/webrtc.update none || echo "webrtc config failed"
        
        # –ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ - —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–∞–±–º–æ–¥—É–ª–∏
        echo "Attempt 1: Basic submodules only"
        git submodule update --init --recursive build-system/bazel-rules || echo "bazel-rules failed"
        git submodule update --init --recursive submodules/LottieCpp || echo "LottieCpp failed"
        git submodule update --init --recursive third-party/XcodeGen || echo "XcodeGen failed"
        git submodule update --init --recursive third-party/dav1d || echo "dav1d failed"
        git submodule update --init --recursive third-party/libvpx || echo "libvpx failed"
        git submodule update --init --recursive third-party/td || echo "td failed"
        
        echo "‚úÖ Basic submodules updated"
        
    - name: Apply modifications
      run: |
        echo "üîß Applying modifications..."
        cd original-telegram
        # –ò–∑–º–µ–Ω—è–µ–º "Chats" –Ω–∞ "ch"
        sed -i '' 's/"DialogList.TabTitle" = "Chats";/"DialogList.TabTitle" = "ch";/g' Telegram/Telegram-iOS/en.lproj/Localizable.strings
        sed -i '' 's/"DialogList.Title" = "Chats";/"DialogList.Title" = "ch";/g' Telegram/Telegram-iOS/en.lproj/Localizable.strings
        echo "‚úÖ Modifications applied: 'Chats' ‚Üí 'ch'"
        
    - name: Verify changes
      run: |
        echo "üîç Verifying changes..."
        cd original-telegram
        grep -n "DialogList.TabTitle\|DialogList.Title" Telegram/Telegram-iOS/en.lproj/Localizable.strings
        
    - name: Setup Xcode
      run: |
        echo "üì± Setting up Xcode..."
        sudo xcode-select --switch /Applications/Xcode.app
        xcodebuild -version
        
    - name: Generate Xcode project
      run: |
        echo "üî® Generating Xcode project..."
        cd original-telegram
        python3 build-system/Make/Make.py \
          --cacheDir="$HOME/telegram-bazel-cache" \
          generateProject \
          --configurationPath=build-system/template_minimal_development_configuration.json \
          --xcodeManagedCodesigning || {
            echo "‚ö†Ô∏è Project generation failed, trying alternative configuration..."
            python3 build-system/Make/Make.py \
              --cacheDir="$HOME/telegram-bazel-cache" \
              generateProject \
              --configurationPath=build-system/template_minimal_development_configuration.json
          }
        
    - name: Build Telegram IPA
      run: |
        echo "üì¶ Building Telegram IPA for iOS devices..."
        cd original-telegram
        
        # –ö–æ–ø–∏—Ä—É–µ–º exportOptions.plist
        cp ../../ios/exportOptions.plist Telegram/Telegram-iOS/exportOptions.plist
        
        # –°–æ–±–∏—Ä–∞–µ–º –∞—Ä—Ö–∏–≤
        xcodebuild -project Telegram.xcodeproj -scheme Telegram -configuration Release -archivePath build/Telegram.xcarchive archive || xcodebuild -project Telegram.xcodeproj -scheme Telegram -configuration Debug -archivePath build/Telegram.xcarchive archive
        
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º IPA
        xcodebuild -exportArchive -archivePath build/Telegram.xcarchive -exportPath build/ipa -exportOptionsPlist Telegram/Telegram-iOS/exportOptions.plist || xcodebuild -exportArchive -archivePath build/Telegram.xcarchive -exportPath build/ipa -exportOptionsPlist Telegram/Telegram-iOS/exportOptions.plist -allowProvisioningUpdates
        
    - name: Find IPA files
      run: |
        echo "üîç Looking for IPA files..."
        cd original-telegram
        find . -name "*.ipa" -type f
        ls -la build/ipa/ || echo "IPA directory not found"
        ls -la build/ || echo "Build directory contents:"
        
    - name: Upload IPA file
      uses: actions/upload-artifact@v4
      with:
        name: telegram-modified-ipa
        path: original-telegram/build/ipa/*.ipa
        if-no-files-found: warn
        
    - name: Upload all build files
      uses: actions/upload-artifact@v4
      with:
        name: telegram-build-files
        path: original-telegram/build/
        if-no-files-found: warn
        
    - name: Success message
      run: |
        echo "üéâ Modified Telegram IPA build completed!"
        echo "üì± Changes applied: 'Chats' ‚Üí 'ch'"
        echo "üì¶ IPA file ready for iOS devices"
        echo "üì• Download from: GitHub Actions ‚Üí Artifacts"
        echo ""
        echo "üìã Installation:"
        echo "   1. Download telegram-modified-ipa"
        echo "   2. Install via AltStore/Sideloadly"
        echo "   3. Trust developer in Settings ‚Üí General ‚Üí Device Management"
        echo ""
        echo "‚úÖ You now have Telegram with 'ch' button!" 